name: Using Reusable Workflow
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_module  #We are caching the local node_module folder
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' # the cache-hit paramater belongs to the cache action https://github.com/actions/cache
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_module  #We are caching the local node_module folder
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' # the cache-hit paramater belongs to the cache action https://github.com/actions/cache
        run: npm ci
      - name: Test code
        id: run-tests # We add it, it will help upi to have a reference 
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'  #I want a test report only if "Test code" fails
        #https://docs.github.com/en/actions/learn-github-actions/contexts#steps-context
        #failure() - if we not mentions this word so when 'Test code' step will fail the flow will stop
        #and we want the step 'Upload test report' will run only when 'Test code' step fails
        #More of the special conditional functions:
        #failure() - returns true when any previous step or job failed 
        #success() - returns true when none of the previos steps have failed
        #always() - Causes the step to always execute, even when cancelled
        #cancelled() - returns true if the workflow has been cancelled
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_module  #We are caching the local node_module folder
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' # the cache-hit paramater belongs to the cache action https://github.com/actions/cache
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    uses: ./.github/workflows/reusable.yml # Here we will use another workflow
    with:
      artifact-name: dist-files #passing the name of the artifact to the input parameter artifact-name
    #secrets: # we pass a secret value to the flow, we need use the same secret key as in the flow
    #  some-secret: ${{ secrets.some-secret }} # Here we use the secrets context
  print-deploy-result:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Print deploy output 
        run: echo "${{ needs.deploy.outcome.result }}"
  report:
    needs: [lint, deploy] # This job will run after lint and deploy jobs
    if: failure() # This job will run only it there is a failure in the previous steps or jobs
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |
          echo "Something went wrong"
          echo "${{ github }}"


